/*
7. В подключенном MySQL репозитории создать базу данных “Друзья человека”
*/

DROP DATABASE IF EXISTS `Друзья человека`;
CREATE DATABASE `Друзья человека`;
SHOW DATABASES;

/*
8. Создать таблицы с иерархией из диаграммы в БД
*/

USE `Друзья человека`;

-- grandparent class:

CREATE TABLE типы_животных (
    animal_type_id INT AUTO_INCREMENT PRIMARY KEY,
    animal_type_name VARCHAR(255) 
);

-- parent classes:

CREATE TABLE виды_животных (
    animal_kind_id INT AUTO_INCREMENT PRIMARY KEY,
    animal_kind_name VARCHAR(255), 
    animal_type_id INT,
    FOREIGN KEY (animal_type_id) REFERENCES типы_животных(animal_type_id)
);

-- child classes:

CREATE TABLE животные (
    id INT AUTO_INCREMENT PRIMARY KEY,
    animal_kind_id INT, 
    name VARCHAR(255),
    commands VARCHAR(255),
    date_of_birth DATE,
    FOREIGN KEY (animal_kind_id) REFERENCES виды_животных(animal_kind_id)
);

/*
9. Заполнить низкоуровневые таблицы именами(животных), командами которые они выполняют и датами рождения
*/

INSERT INTO типы_животных (animal_type_name)
VALUES
    ('Домашние'),
    ('Вьючные');
   
INSERT INTO виды_животных (animal_kind_name, animal_type_id)
VALUES
    ('Собаки', 1),
    ('Кошки', 1),
    ('Хомяки', 1),
    ('Лошади', 2),
    ('Верблюды', 2),
    ('Ослы', 2);
   
INSERT INTO животные (animal_kind_id, name, commands, date_of_birth)
VALUES
    (1, 'Барсик', 'Сидеть, лежать', '2020-03-10'),
    (1, 'Муся', 'Голос', '2019-08-15'),
    (2, 'Мурка', 'Играть с мячиком', '2021-01-25'),
    (2, 'Вася', 'Поднимать лапку', '2020-05-12'),
    (3, 'Беляк', 'Крутиться в колесе', '2022-02-05'),
    (3, 'Шарик', 'Закапывать еду', '2021-11-20'),
    (4, 'Рыжик', 'Скакать', '2018-06-03'),
    (4, 'Белка', 'Не скакать', '2019-04-12'),
    (5, 'Гафур', 'Переносить грузы', '2017-09-22'),
    (5, 'Шерлок', 'Плеваться', '2018-11-30'),
    (6, 'Буря', 'Грустно смотреть', '2020-07-14'),
    (6, 'Дружок', 'Есть морковку', '2019-03-08');


/*
10. Удалив из таблицы верблюдов, т.к. верблюдов решили перевезти в другой питомник на зимовку. 
Объединить таблицы лошади, и ослы в одну таблицу.
*/
-- это нечетко сформулированное задание, тк либо у нас общая таблица для всех животных 
-- и мы из нее удаляем верблюдов (первое подзадание), либо у нас отдельные таблицы для всех животных и 
-- мы удаляем всю таблицу с верблюдами (что следует из второго подзадания). 
-- вообще прямолинейное выполнение этих пунктов требует отдельных таблиц для каждого класса, но 
-- с точки зрения SQL эта логика является избыточной, логичнее обойтись одной таблицей с животными, 
-- которая будет содержать внешние ключи для задания вида животных, которые в свою очередь 
-- будут ссылаться на ключи еще более высокого типа для опраделения типа животных.
   
DELETE животные
FROM животные
JOIN виды_животных ON животные.animal_kind_id = виды_животных.animal_kind_id
WHERE виды_животных.animal_kind_name = 'Верблюды';

SELECT * from животные;

/*
11.Создать новую таблицу “молодые животные” в которую попадут все животные старше 1 года, но младше 3 лет и в отдельном столбце с точностью до месяца подсчитать возраст животных в новой таблице
*/

CREATE TABLE молодые_животные AS
SELECT *,
       TIMESTAMPDIFF(MONTH, date_of_birth, CURDATE()) AS age_in_months
FROM животные
WHERE DATE_ADD(date_of_birth, INTERVAL 1 YEAR) <= CURDATE()
  AND DATE_ADD(date_of_birth, INTERVAL 3 YEAR) > CURDATE();

/*
12. Объединить все таблицы в одну, при этом сохраняя поля, указывающие на прошлую принадлежность к старым таблицам.
*/

CREATE TABLE общая_таблица AS
SELECT ж.id, ж.name, ж.commands, ж.date_of_birth, вж.animal_kind_name, тж.animal_type_name 
FROM животные AS ж
JOIN виды_животных AS вж ON ж.animal_kind_id = вж.animal_kind_id
JOIN типы_животных AS тж ON вж.animal_type_id = тж.animal_type_id;

